alter table "public"."rooms" drop constraint "rooms_guesser_id_fkey";

alter table "public"."rooms" drop constraint "rooms_helper_id_fkey";

create table "public"."players" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "role" text not null,
    "username" text not null,
    "user_id" uuid not null,
    "room_id" bigint not null
);


alter table "public"."players" enable row level security;

alter table "public"."rooms" drop column "guesser_id";

alter table "public"."rooms" drop column "guesser_name";

alter table "public"."rooms" drop column "helper_id";

alter table "public"."rooms" drop column "helper_name";

alter table "public"."rooms" add column "created_by" uuid not null;

alter table "public"."rooms" add column "created_by_name" text not null;

CREATE UNIQUE INDEX players_pkey ON public.players USING btree (id);

alter table "public"."players" add constraint "players_pkey" PRIMARY KEY using index "players_pkey";

alter table "public"."players" add constraint "players_room_id_fkey" FOREIGN KEY (room_id) REFERENCES rooms(id) ON DELETE CASCADE not valid;

alter table "public"."players" validate constraint "players_room_id_fkey";

alter table "public"."players" add constraint "players_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."players" validate constraint "players_user_id_fkey";

alter table "public"."rooms" add constraint "rooms_created_by_fkey" FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."rooms" validate constraint "rooms_created_by_fkey";

create policy "Enable read access for all users"
on "public"."players"
as permissive
for select
to anon
using (true);



